{"version":3,"sources":["Components/Card/StyleCard/Card.module.css","Components/OneCardPokemon/StyleOneCardPokemon/OneCardPokemon.module.css","StyleApp/App.module.css","API/ApiPokemon.js","helpers/typeColors.ts","Redux/pokemon-reducer.js","add-pokemon-selector.js","Components/OneCardPokemon/OneCardPokemon.jsx","Components/Card/Card.jsx","App.jsx","reportWebVitals.ts","Redux/redux-store.js","index.js"],"names":["module","exports","getPokemon","url","Promise","resolve","reject","fetch","then","res","json","data","getAllPokemon","a","typeColors","bug","dragon","fairy","fire","ghost","ground","normal","pyschic","steel","dark","electric","fighting","flying","grass","ice","poison","rock","water","initialState","pokemons","takepokemon","state","pokemoPage","OneCardPokemon","pokemon","useSelector","pokemonRef","useRef","useEffect","current","setSeenPokemons","stats","useState","seenPokemons","className","s","one_crad_container","Card_data","Card_img","src","sprites","front_default","alt","width","height","Card_name","name","all_stats","Data_type","name_type","all_types","types","map","type","stats_attac","container_tittle","title","container_attack","attack","base_stat","stats_defence","container_defence","weight","moves","length","Card","pokemonData","LoadMore","values","dispatch","useDispatch","seenMode","setSeenMode","content","container","i","onClick","seen","Card__img","Card__name","Card__types","Card__type","style","backgroundColor","id","btn","App","setPokemonData","nextUrl","setNextUrl","loading","setLoading","setValues","LoadTypeURL","LoadPokemonURL","responsePokemon","next","loadPokemon","results","fetchData","dataPokemon","all","pokemonRecord","_pokemonData","useForm","register","handleSubmit","textAlign","onSubmit","selectPokemon","form","custom_select","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","action","addstats","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3b5ef724.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Card_content__2GDzF\",\"container\":\"Card_container__3ThRd\",\"Card\":\"Card_Card__2DZ4E\",\"Card__img\":\"Card_Card__img__1_K0L\",\"Card__types\":\"Card_Card__types__3z1F_\",\"Card__type\":\"Card_Card__type__3f42k\",\"Card__name\":\"Card_Card__name__2Q3sg\",\"btn\":\"Card_btn__2Fqjg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"one_crad_container\":\"OneCardPokemon_one_crad_container__2sIpk\",\"Card_data\":\"OneCardPokemon_Card_data__2HHyg\",\"Card_img\":\"OneCardPokemon_Card_img__27SwB\",\"Card_name\":\"OneCardPokemon_Card_name__2iJq4\",\"Data_type\":\"OneCardPokemon_Data_type__1I7TO\",\"name_type\":\"OneCardPokemon_name_type__1iqTI\",\"all_types\":\"OneCardPokemon_all_types__1qj0m\",\"type\":\"OneCardPokemon_type__1f5SX\",\"stats_attac\":\"OneCardPokemon_stats_attac__DGsIg\",\"container_tittle\":\"OneCardPokemon_container_tittle__37XJr\",\"container_attack\":\"OneCardPokemon_container_attack__TM65e\",\"stats_defence\":\"OneCardPokemon_stats_defence__3KTR5\",\"container_defence\":\"OneCardPokemon_container_defence__Z-DxN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"App_form__GKYY-\"};","export const getPokemon = ({url}) => {\n    return new Promise((resolve, reject) => {\n        fetch(url).then(res => res.json())\n            .then(data => {\n                resolve(data)\n            })\n    });\n}\n\nexport async function getAllPokemon(url) {\n    return new Promise((resolve, reject) => {\n        fetch(url).then(res => res.json())\n            .then(data => {\n                resolve(data)\n            })\n    });\n}\n\n","const typeColors = {\n    bug: '#729f3f',\n    dragon: '#53a4cf',\n    fairy: '#fdb9e9',\n    fire: '#fd7d24',\n    ghost: '#7b62a3',\n    ground: '#f7de3f',\n    normal: '#a4acaf',\n    pyschic: '#f366b9',\n    steel: '#9eb7b',\n    dark: '#707070',\n    electric: '#eed535',\n    fighting: '#d56723',\n    flying: '#3dc7ef',\n    grass: '#9bcc50',\n    ice: '#51c4e7',\n    poison: '#b97fc9',\n    rock: '#a38c21',\n    water: '#4592c4'\n}\n\nexport default typeColors;","let initialState = {\n    pokemons: []\n\n};\n\n\nexport const pokemoReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'SEEPOKEMON': {\n            let addstats = {\n                stats: action.stats\n            }\n            return {\n                ...state,\n                pokemons: addstats,\n            }\n        }\n\n        default:\n            return state;\n    }\n}\n\n\nexport const Add = (stats) => {\n    return {\n        type: \"SEEPOKEMON\",\n        stats\n    }\n}\n\n","export const takepokemon = (state) => {\n    return state.pokemoPage.pokemons\n}\n\n","import React, {useEffect, useRef, useState} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {takepokemon} from \"../../add-pokemon-selector\";\nimport s from \"./StyleOneCardPokemon/OneCardPokemon.module.css\"\n\nexport const OneCardPokemon = () => {\n    const pokemon = useSelector(takepokemon)\n\n    const pokemonRef = useRef(pokemon)\n\n    useEffect(() => {\n        pokemonRef.current = pokemon\n        setSeenPokemons(pokemonRef.current.stats)\n    }, [pokemon])\n\n    const [seenPokemons, setSeenPokemons] = useState(pokemonRef.current.stats)\n\n    return (\n        <div className={s.one_crad_container}>\n            <div className={s.Card_data}>\n                <div className={s.Card_img}>\n                    <img src={seenPokemons.sprites.front_default} alt=\"\" width=\"200px\" height=\"200px\"/>\n                </div>\n                <div className={s.Card_name}>\n                    <span>{seenPokemons.name}</span>\n                </div>\n\n\n                <div className={s.all_stats}>\n                    <div className={s.Data_type}>\n                        <span className={s.name_type}>Type</span>\n                        <div className={s.all_types}>\n                            {seenPokemons.types.map(type => {\n                                return (\n                                    <span className={s.type}>\n                                        {type.type.name}\n                                    </span>\n                                )\n                            })}\n                        </div>\n                    </div>\n                    <div className={s.stats_attac}>\n                        <div className={s.container_tittle}>\n                            <p className={s.title}>Attack</p>\n                        </div>\n                        <div className={s.container_attack}>\n                            <p className={s.attack}>{seenPokemons.stats[1].base_stat}</p>\n                        </div>\n                    </div>\n\n                    <div className={s.stats_defence}>\n                        <div className={s.container_tittle}>\n                            <p className={s.title}>Defence</p>\n                        </div>\n                        <div className={s.container_defence}>\n                            <p>{seenPokemons.stats[2].base_stat}</p>\n                        </div>\n                    </div>\n\n                    <div className={s.stats_defence}>\n                        <div className={s.container_tittle}>\n                            <p className={s.title}>Hp</p>\n                        </div>\n                        <div className={s.container_defence}>\n                            <p>{seenPokemons.stats[0].base_stat}</p>\n                        </div>\n                    </div>\n\n                    <div className={s.stats_defence}>\n                        <div className={s.container_tittle}>\n                            <p className={s.title}>SP Attack</p>\n                        </div>\n                        <div className={s.container_defence}>\n                            <p>{seenPokemons.stats[3].base_stat}</p>\n                        </div>\n                    </div>\n\n\n                    <div className={s.stats_defence}>\n                        <div className={s.container_tittle}>\n                            <p className={s.title}>SP Defence</p>\n                        </div>\n                        <div className={s.container_defence}>\n                            <p>{seenPokemons.stats[4].base_stat}</p>\n                        </div>\n                    </div>\n\n                    <div className={s.stats_defence}>\n                        <div className={s.container_tittle}>\n                            <p className={s.title}>Speed</p>\n                        </div>\n                        <div className={s.container_defence}>\n                            <p>{seenPokemons.stats[5].base_stat}</p>\n                        </div>\n                    </div>\n\n                    <div className={s.stats_defence}>\n                        <div className={s.container_tittle}>\n                            <p className={s.title}>Weight</p>\n                        </div>\n                        <div className={s.container_defence}>\n                            <p>{seenPokemons.weight}</p>\n                        </div>\n                    </div>\n\n                    <div className={s.stats_defence}>\n                        <div className={s.container_tittle}>\n                            <p className={s.title}>Total moves</p>\n                        </div>\n                        <div className={s.container_defence}>\n                            <p>{seenPokemons.moves.length}</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React, {useState} from 'react';\nimport typeColors from '../../helpers/typeColors'\nimport s from './StyleCard/Card.module.css'\nimport {useDispatch} from \"react-redux\";\nimport {Add} from \"../../Redux/pokemon-reducer\";\nimport {OneCardPokemon} from \"../OneCardPokemon/OneCardPokemon\";\n\n\nexport const Card = ({pokemonData, LoadMore, values}) => {\n\n    let SeenPok\n\n    const dispatch = useDispatch()\n\n    const seen = (pokemon) => {\n        dispatch(Add(pokemon))\n        setSeenMode(1)\n    }\n\n    const [seenMode, setSeenMode] = useState(0)\n\n    return (\n        <div className={s.content}>\n            {pokemonData.length == 0 ? <p>There are no Pokémon with this type</p> : \"\"}\n            <div className={s.container}>\n                {pokemonData.map((pokemon, i)  => {\n\n                        return (\n                            <div className={s.Card} key={pokemon.id} onClick={\n                                SeenPok = () => {\n                                    seen(pokemon)\n                                }\n                            }>\n                                <div className={s.Card__img}>\n                                    <img src={pokemon.sprites.front_default} alt=\"\" width=\"100px\" height=\"100px\"/>\n                                </div>\n                                <div className={s.Card__name}>\n                                    {pokemon.name}\n                                </div>\n                                <div className={s.Card__types}>\n                                    {\n                                        pokemon.types.map(type => {\n                                            return (\n                                                <div className={s.Card__type}\n                                                     style={{backgroundColor: typeColors[type.type.name]}}>\n                                                    {type.type.name}\n                                                </div>\n                                            )\n                                        })\n                                    }\n                                </div>\n                            </div>\n                        )\n                            ;\n                    }\n                )}\n                <div className={s.btn}>\n                    {values == \"noselect\" ? <button onClick={LoadMore}>Load More</button> : \"\"}\n\n                </div>\n            </div>\n            {seenMode === 1 ? <OneCardPokemon/> : \"\"}\n\n        </div>\n    )\n}\n\n","import React, {useState, useEffect} from 'react';\nimport {getPokemon, getAllPokemon} from './API/ApiPokemon';\nimport {Card} from './Components/Card/Card';\nimport {useForm} from \"react-hook-form\";\nimport s from \"./StyleApp/App.module.css\"\n\n\nexport const App = () => {\n    const [pokemonData, setPokemonData] = useState([])\n    const [nextUrl, setNextUrl] = useState('');\n    const [loading, setLoading] = useState(true);\n    const [values, setValues] = useState(\"noselect\")\n\n    const LoadTypeURL = `https://pokeapi.co/api/v2/type/${values}` //There is no limit utility for this request. Therefore, I will not be able to create a withdrawal with a limit of 12\n    const LoadPokemonURL = 'https://pokeapi.co/api/v2/pokemon?limit=12'\n\n    useEffect(() => {\n        async function fetchData() {\n            if (values == \"noselect\") {\n                setLoading(true);\n                let responsePokemon = await getAllPokemon(LoadPokemonURL)\n                setNextUrl(responsePokemon.next);\n                setPokemonData([])\n                await loadPokemon(responsePokemon.results);\n                setLoading(false);\n            } else {\n                setLoading(true);\n                let responsePokemon = await getAllPokemon(LoadTypeURL)\n                setNextUrl(responsePokemon.next);\n                setPokemonData([])\n                await loadPokemon(responsePokemon.pokemon);\n                setLoading(false);\n            }\n\n        }\n\n        fetchData();\n    }, [values])\n\n    const LoadMore = async () => {\n        setLoading(true);\n        let data = await getAllPokemon(nextUrl);\n        await loadPokemon(data.results);\n        setNextUrl(data.next);\n        setLoading(false);\n    }\n\n    const loadPokemon = async (dataPokemon) => {\n        if (values == \"noselect\") {\n            let _pokemonData = await Promise.all(dataPokemon.map(async pokemon => {\n                let pokemonRecord = await getPokemon(pokemon)\n                return pokemonRecord\n            }))\n            setPokemonData(pokemonData => ([...pokemonData, ..._pokemonData]));\n        } else {\n            let _pokemonData = await Promise.all(dataPokemon.map(async pokemon => {\n                let pokemonRecord = await getPokemon(pokemon.pokemon)\n                return pokemonRecord\n            }))\n            setPokemonData(pokemonData => ([...pokemonData, ..._pokemonData]));\n        }\n\n\n    }\n\n    const {register, handleSubmit} = useForm();\n    const onSubmit = data => setValues(data.selectPokemon);\n\n\n    return (\n        <div>\n            {loading ? <h1 style={{textAlign: 'center'}}>Loading...</h1> : (\n                <>\n                    <form onSubmit={handleSubmit(onSubmit)} className={s.form}>\n                        <select className={s.custom_select} {...register(\"selectPokemon\")}>\n                            <option value=\"noselect\">No select</option>\n                            <option value=\"normal\">Normal</option>\n                            <option value=\"fighting\">Fighting</option>\n                            <option value=\"flying\">Flying</option>\n                            <option value=\"poison\">Poison</option>\n                            <option value=\"ground\">Ground</option>\n                            <option value=\"rock\">Rock</option>\n                            <option value=\"bug\">Bug</option>\n                            <option value=\"ghost\">Ghost</option>\n                            <option value=\"steel\">Steel</option>\n                            <option value=\"fire\">Fire</option>\n                            <option value=\"water\">Water</option>\n                            <option value=\"grass\">Grass</option>\n                            <option value=\"electric\">Electric</option>\n                            <option value=\"psychic\">Psychic</option>\n                            <option value=\"ice\">Ice</option>\n                            <option value=\"dragon\">Dragon</option>\n                            <option value=\"dark\">Dark</option>\n                            <option value=\"fairy\">Fairy</option>\n                            <option value=\"shadow\">Shadow</option>\n                        </select>\n                        <button type=\"submit\">Search</button>\n                    </form>\n                    <div>\n                        <Card pokemonData={pokemonData} LoadMore={LoadMore} values={values}/>\n                    </div>\n                </>\n            )}\n        </div>\n    );\n\n\n}\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\nimport {pokemoReducer} from \"./pokemon-reducer\";\nimport thunkMiddleware from \"redux-thunk\"\n\n\nlet reducers = combineReducers({\n    pokemoPage: pokemoReducer,\n});\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\n\nwindow.__store__ = store\nexport default store;","import React from 'react';\nimport {BrowserRouter} from 'react-router-dom';\nimport {App} from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./Redux/redux-store\";\nimport {Provider} from 'react-redux';\nimport ReactDOM from 'react-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>, document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}